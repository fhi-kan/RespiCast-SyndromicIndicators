name: AutomaticUploader

# This example workflow is meant to depict steps needed to get the model-output data
# from your_organization data GitHub repository and open a pull request to upload data
# to european-modelling-hubs/RespiCast-SyndromicIndicators hub-repository
# A good starting point for a better understandig of how GitHub actions work
# is this: https://docs.github.com/en/actions/quickstart

# N.B.
# 1. This workflow should be placed under the .github/workflows folder of your FORKED REPO !!
# 2. Since the current workflow pulls data directly from the upstream hub (european-modelling-hubs/RespiCast-SyndromicIndicators),
# you do not need to sync the forked repo!

# Firts step is to define di events that can trigger this workflow
on:

  # Run on schedule
  schedule:
  - cron: "30 15 * * 3"

  # Or you can manually trigger the workflow
  workflow_dispatch:

jobs:
  create_PR_job:
    runs-on: ubuntu-latest


    steps:

      # Calculate Wednesday's date of the current week
      - name: Calculate Wednesday's date
        id: calculate_wednesday
        run: |
          # Get the current day of the week (1=Monday, ..., 7=Sunday)
          weekday=$(date +%u)
          # Calculate how many days to add or subtract to get to Wednesday (3)
          offset=$((3 - weekday))
          # Calculate the date of the Wednesday (if offset is negative, subtract days)
          wednesday_date=$(date -d "$offset days" +%Y-%m-%d)
          echo "Wednesday's date is $wednesday_date"
          # Set the output
          echo "::set-output name=wednesday_date::$wednesday_date"

      # Checkout your forked repository - main branch -
      # where this action is currently hosted !
      # ---------------------------------------------------
      - name: checkout forked repository
        uses: actions/checkout@v3
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      # Checkout the model data repository - main branch -
      # This is the repository where the model output data reside
      # In this example data repo is https://github.com/your_organization/modeloutput-data-repo
      # -----------------------------------------------------------------------------
      - name: checkout data repository
        uses: actions/checkout@v3
        with:
          ref: 'main' # the git branch to work on
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: 'your_organization/modeloutput-data-repo'
          path: './data-repo/' # Relative path under $GITHUB_WORKSPACE to place the repository



      # Set the default remote repository to use when querying the GitHub API for the locally cloned repository.
      - run: gh repo set-default european-modelling-hubs/RespiCast-SyndromicIndicators
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Pull directly from main branch of the upstream repository,
      # so you do not have to sync and the workflow is not part of the PR
      - run: |
          git config --global user.name "YourGitHubUserName"
          git config --global user.email "your_email@ewhatever.com"
          git remote add upstream https://github.com/european-modelling-hubs/RespiCast-SyndromicIndicators.git
          git fetch upstream
          git switch -C pr-new-branch upstream/main

        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # make a copy of the needed files from data repository
      - name: Copy model-output file
        run: |
          wednesday_date=${{ steps.calculate_wednesday.outputs.wednesday_date }}
          cp ./data-repo/archive/${wednesday_date}-team-model.csv  ./model-output/TeamName-ModelName

      # commit changes to the new brach! This step is needed in order
      # to succesfully open the subsequent pull request
      - run: |
          wednesday_date=${{ steps.calculate_wednesday.outputs.wednesday_date }}
          git add ./model-output/TeamName-ModelName/${wednesday_date}-team-model.csv
          git commit -m "AutoSubmitPR"
          git push -f -u origin pr-new-branch


      # Finally, open the pull request from local pr-new-branch to the main branch
      # secrets.MY_PAT_SECRET is a repository secret you have to create in your forked repository
      # containing a valid PERSONAL ACCESS TOKEN for YourGitHubUserName.
      # Without this secret the pr create fails with "Resource not accessible by integration" error
      - name: Open the pull requests
        run: |
          wednesday_date=${{ steps.calculate_wednesday.outputs.wednesday_date }}
          gh pr create --head  YourGitHubUserName:pr-new-branch  --base main --title 'PR Title' --body 'PR Body'
        env:
          GH_TOKEN: ${{ secrets.MY_PAT_SECRET  }}
